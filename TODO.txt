1. Класс GLErrorMonitor выполняет весьма бедную функциональность. Для получения строки перечисления по ошибке существует функция gluEnumString (или как-то так)
2. Нужно сделать класс Profiler. - реализацию можно подсмотреть в John Chapman или в Ogre (в огре весьма сложно и непонятно)
3. Возможно стоит избавиться от Отдельной компиляции imCore в библиотеку и компилить сразу imEngine.dll, иметь сразу одну документацию на весь imEngine.
	Это позволит упростить систему сборки. Разделение по namespace оставить


5. Не создавать менеджеры в imCore. Это так, посколько менеджеры должны работать лишь с некоторой директорией в которой лежат ресурсы. Создать лишь методы загрузки с некоторого файла. Например Texture2D::loadFromFile("ololo.dds"). Не стоит отдельно создавать класс Image
6. Возможно стоит все же обозначит Texture... как ресурсы
7. В System создать BaseApplication с минимальными инициализациями

8. Про OGL объекты. Действительно создавать экземепляры объектов OpenGL в последнюю очередь, то есть при первом вызове bind(). Если bind() вызван последующие разы -
проверять: если объект является последним забинденым, то ничего не делать. Также не стоит использовать GET функции, так как из-за них серьезно проседает FPS.
Необходимо также наследовать все OGL объекты от какого нибудь класса Resource, который будет содержать имя ресурса и возможно другие штучки.



